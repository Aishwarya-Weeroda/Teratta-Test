name: Development Distribution

on:
  push:
    branches:
      - master
      - base-configurations

jobs:
  # dev-distribution:
  #   runs-on: ubuntu-latest
  #   name: Development Distribution
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - uses: actions/setup-node@master

  #   - name: Install node modules
  #     run: |
  #       yarn install
  #   - name: Run test
  #     run: |
  #       yarn test
  #   - name: Cache Gradle Wrapper
  #     uses: actions/cache@v2
  #     with:
  #       path: ~/.gradle/wrapper
  #       key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

  #   - name: Cache Gradle Dependencies
  #     uses: actions/cache@v1
  #     with:
  #       path: ~/.gradle/caches
  #       key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
  #       restore-keys: |
  #         ${{ runner.os }}-gradle-caches-
  #   - name: Make Gradlew Executable
  #     run: cd android && chmod +x ./gradlew

  #   - name: Build Android Release
  #     run: |
  #       cd android && ./gradlew assembleRelease --no-daemon

  #   - name: Upload Artifact
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: app-release.apk
  #       path: android/app/build/outputs/apk/release/
  
  #   - name: Distribute app via Firebase App Distribution
  #     env:
  #         firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
  #         firebaseGroups: ${{ secrets.FIREBASE_GROUP_DEV }}
  #         firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
  #         notes: ${{ github.event.head_commit.message }}
  #     run: |
  #       yarn global add firebase-tools
  #       export PATH="$(yarn global bin):$PATH"
  #       firebase \
  #         appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
  #         --app $firebaseAppId \
  #         --release-notes "$notes" \
  #         --groups "$firebaseGroups" \
  #         --token "$firebaseToken"
  
  build-ios-adhoc:
    runs-on: macOS-latest
    steps:
      - name: Getting the repo
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install React Native CLI
        run: |
          yarn global add react-native-cli
      - name: Install yarn dependencies
        run: |
          yarn install
      - name: Building bundle
        run: |
          yarn react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/main.jsbundle --assets-dest ios
      - name: Install pod dependencies
        run: |
          cd ios && pod install
      - name: Update build number
        run: |
          cd ios
          agvtool new-marketing-version 1.0.0
          agvtool new-version -all ${{github.run_number}}
      - name: Build ios
        uses: yukiarrr/ios-build-action@v1.3.2
        with:
          project-path: ios/terata.xcodeproj
          workspace-path: ios/terata.xcworkspace
          team-id: ${{ secrets.TEAM_ID }}
          p12-base64: ${{ secrets.P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.MOBILEPROVISION_BASE64 }}
          code-signing-identity: ${{ secrets.CODE_SIGNING_IDENTITY }}
          export-method: development
          output-path: output/output.ipa
          update-targets: terata
          scheme: terata
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: output/output.ipa
          
  upload-ios:
    needs: build-ios-adhoc
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Firebase App Distribution
        uses: hasretsariyer/firebase-app-distribution-github-action@v1
        with:
          app_id: ${{secrets.FIREBASE_APP_ID_IOS}}
          firebase_token: ${{secrets.FIREBASE_TOKEN}}
          app_file: output.ipa
          tester_groups: ${{ secrets.FIREBASE_GROUP_DEV }}
      # - name: upload artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{secrets.FIREBASE_APP_ID_IOS}}
      #     token: ${{secrets.FIREBASE_TOKEN}}
      #     groups: ${{ secrets.FIREBASE_GROUP_DEV }}
      #     file: output.ipa

  # build_ios:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 14.x
  #   - run: yarn install
  #   - run: xcode-select -p
  #   - run: pod install
  #     working-directory: ios
  #     name: Install pod dependencies
  #   - name: Build iOS (debug)
  #     run: "xcodebuild \
  #       -workspace ios/erata.xcworkspace \
  #       -scheme Terata \
  #       clean archive \
  #       -sdk iphoneos \
  #       -configuration Debug \
  #       -UseModernBuildSystem=NO \
  #       -archivePath $PWD/Terata \
  #       CODE_SIGNING_ALLOWED=NO"

